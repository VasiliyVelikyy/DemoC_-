#include <iostream>
using namespace std;

// Класс Rectangle (Прямоугольник)
class Rectangle {
private:
    double x, y;  // Координаты левого нижнего угла прямоугольника
    double width, height;  // Ширина и высота прямоугольника

public:
    // Конструктор класса для инициализации координат и размеров
    Rectangle(double x0, double y0, double w, double h)
        : x(x0), y(y0), width(w), height(h) {
        cout << "Создан прямоугольник с координатами (" << x << ", " << y << ") и размерами " << width << " x " << height << endl;
    }

    // Деструктор
    ~Rectangle() {
        cout << "Удален прямоугольник с координатами (" << x << ", " << y << ") и размерами " << width << " x " << height << endl;
    }

    // Метод для перемещения прямоугольника
    void move(double dx, double dy) {
        x += dx;
        y += dy;
    }

    // Метод для изменения размеров прямоугольника
    void resize(double newWidth, double newHeight) {
        width = newWidth;
        height = newHeight;
    }

    // Метод для вычисления площади прямоугольника
    double area() const {
        return width * height;
    }

    // Метод для вычисления периметра прямоугольника
    double perimeter() const {
        return 2 * (width + height);
    }

    // Метод для вывода информации о прямоугольнике
    void display() const {
        cout << "Прямоугольник с координатами (" << x << ", " << y << ") и размерами " << width << " x " << height << endl;
    }
};

int main() {
    // Создаем два объекта класса Rectangle с помощью динамического выделения памяти
    Rectangle* rect1 = new Rectangle(0.0, 0.0, 4.0, 5.0);  // Прямоугольник с координатами (0, 0) и размерами 4 x 5
    Rectangle* rect2 = new Rectangle(2.0, 3.0, 6.0, 7.0);  // Прямоугольник с координатами (2, 3) и размерами 6 x 7

    // Отображаем информацию о прямоугольниках
    rect1->display();
    rect2->display();

    // Перемещаем первый прямоугольник
    rect1->move(3.0, 4.0);
    cout << "\nПосле перемещения первого прямоугольника:" << endl;
    rect1->display();

    // Изменяем размеры второго прямоугольника
    rect2->resize(8.0, 9.0);
    cout << "\nПосле изменения размеров второго прямоугольника:" << endl;
    rect2->display();

    // Выводим площади и периметры
    cout << "\nПлощадь и периметр первого прямоугольника:" << endl;
    cout << "Площадь: " << rect1->area() << endl;
    cout << "Периметр: " << rect1->perimeter() << endl;

    cout << "\nПлощадь и периметр второго прямоугольника:" << endl;
    cout << "Площадь: " << rect2->area() << endl;
    cout << "Периметр: " << rect2->perimeter() << endl;

    // Освобождаем динамически выделенную память
    delete rect1;
    delete rect2;

    return 0;
}