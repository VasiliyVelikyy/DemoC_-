#include <iostream>
#include <string>
#include <vector>
#include <iomanip>
#include <algorithm>

// Класс для хранения данных о игрушке
class Toy {
private:
    std::string name;       // Название игрушки
    std::string article;    // Артикул
    std::string company;    // Имя фирмы
    double price;           // Цена
    int storageDays;        // Количество дней хранения на складе

public:
    // Конструктор
    Toy(const std::string &name, const std::string &article, const std::string &company,
        double price, int storageDays)
        : name(name), article(article), company(company), price(price), storageDays(storageDays) {}

    // Метод для получения количества дней хранения
    int getStorageDays() const {
        return storageDays;
    }

    // Метод для вывода информации о игрушке
    void printInfo() const {
        std::cout << "Название игрушки: " << name
                  << ", Артикул: " << article
                  << ", Фирма: " << company
                  << ", Цена (с учетом скидки 20%): " << std::fixed << std::setprecision(2) << price * 0.8
                  << " руб., Дней хранения: " << storageDays << "\n";
    }

    // Оператор сравнения для сортировки по убыванию дней хранения
    bool operator<(const Toy &other) const {
        return storageDays > other.storageDays;
    }
};

int main() {
    int numToys;
    std::cout << "Введите количество игрушек: ";
    std::cin >> numToys;

    std::vector<Toy> toys;

    for (int i = 0; i < numToys; ++i) {
        std::string name, article, company;
        double price;
        int storageDays;

        std::cout << "\nВведите название игрушки: ";
        std::cin.ignore();
        std::getline(std::cin, name);
        std::cout << "Введите артикул игрушки: ";
        std::getline(std::cin, article);
        std::cout << "Введите имя фирмы: ";
        std::getline(std::cin, company);
        std::cout << "Введите цену игрушки: ";
        std::cin >> price;
        std::cout << "Введите количество дней хранения: ";
        std::cin >> storageDays;

        toys.emplace_back(name, article, company, price, storageDays);
    }

    // Отфильтровать игрушки, которые хранятся больше 20 дней
    std::vector<Toy> filteredToys;
    for (const Toy &toy : toys) {
        if (toy.getStorageDays() > 20) {
            filteredToys.push_back(toy);
        }
    }

    // Сортировка игрушек по убыванию дней хранения
    std::sort(filteredToys.begin(), filteredToys.end());

    // Вывод информации о подходящих игрушках
    std::cout << "\nИгрушки, хранящиеся на складе больше 20 дней (отсортированы по убыванию дней хранения):\n";
    for (const Toy &toy : filteredToys) {
        toy.printInfo();
    }

    return 0;
}