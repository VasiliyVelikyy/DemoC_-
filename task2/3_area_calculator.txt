#include <iostream>
#include <cmath>
using namespace std;

// Класс Prisma (Прямая призма)
class Prisma {
private:
    double R;  // Радиус описанной окружности
    double H;  // Высота призмы

public:
    // Конструктор для инициализации радиуса и высоты
    Prisma(double R0, double H0) : R(R0), H(H0) {}

    // Метод для вычисления площади основания (правильный шестиугольник)
    double getSo() const {
        return (3 * sqrt(3) / 2) * R * R;
    }

    // Метод для вычисления площади боковой поверхности
    double getSb() const {
        double P = 6 * R;  // Периметр шестиугольника
        return P * H;      // Площадь боковой поверхности
    }

    // Метод для вычисления полной площади поверхности
    double getSp() const {
        return 2 * getSo() + getSb();  // Полная площадь поверхности
    }
};

int main() {
    // Создаем первый объект класса Prisma
    Prisma p1(5.0, 10.0);  // Призма с радиусом 5 и высотой 10

    // Выводим результаты для первого объекта
    cout << "Для первого объекта призмы:" << endl;
    cout << "Площадь основания: " << p1.getSo() << endl;
    cout << "Площадь боковой поверхности: " << p1.getSb() << endl;
    cout << "Полная площадь поверхности: " << p1.getSp() << endl;

    // Создаем второй объект класса Prisma с использованием указателя
    Prisma* p2 = new Prisma(7.0, 15.0);  // Призма с радиусом 7 и высотой 15

    // Выводим результаты для второго объекта
    cout << "\nДля второго объекта призмы (с использованием указателя):" << endl;
    cout << "Площадь основания: " << p2->getSo() << endl;
    cout << "Площадь боковой поверхности: " << p2->getSb() << endl;
    cout << "Полная площадь поверхности: " << p2->getSp() << endl;

    // Освобождаем память
    delete p2;

    return 0;
}